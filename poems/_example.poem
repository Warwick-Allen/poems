Example Poem
A Poet
1970-01-31

{{ Version 1 }}

{Stanza 1}
These are the lines
Of stanza 1

These are the lines
Of stanza 2

----

{{ Version 2 (song arrangement) }}

{Verse 1}
These are the lines
Of the first verse

{Chorus}
La-de-da

{Verse 2}
These are the lines
Of the second verse

====

Audiomack
Suno: s/SongLink12345678

====

{Postscript 1}
Something to note.

----

This is another postscript note,
but without a label.

This note has two paragraphs.

----

${disclaimer}

====

{Synopsis}

This is where the synopsis of the
analysis goes.

Another paragraph.

# Section Heading

Some more text can go here.

Here is _another_ paragraph.

{Full}

This is where the full analysis goes.

# Section Heading

## Sub-Section Heading

### Sub-Sub-Section Heading

A paragraph in the sub-sub-section of
the full analysis.

====

*This section will be ignored.*  It
can be used for comments.

# Notes about this example file.

## Line-by-Line Notes

Below is the example poem repeated, with explanatory notes in the right-hand
column.

Example Poem                           | The poem title (mandatory).
A Poet                                 | The poem's author (optional).
1970-01-01                             | The poem's creation date (mandatory).
                                       |
{{ Version 1 }}                        | The version label (optional).
                                       |
{Stanza 1}                             | Segment label (optional).
These are the lines                    | The lines of the first segment of the
Of stanza 1                            | first version.
                                       |
These are the lines                    | Lines of the second segment.  There
Of stanza 2                            | must be one or more segments per
                                       | version.
                                       |
----                                   | Divider between song versions (only
                                       | required if there is another version).
                                       |
                                       | Extra blank lines are ignored.
                                       |
{{ Version 2 (song arrangement) }}     | The initial and final whitespace in
                                       | labels will be trimmed.
                                       |
{Verse 1}                              |
These are the lines                    | New lines within poem segments are
Of the first verse                     | preserved.
                                       |
{Chorus}                               |
La-de-da                               |
                                       |
{Verse 2}                              |
These are the lines                    |
Of the second verse                    |
                                       |
====                                   | End-of-poem marker (only required if
                                       | there are subsequent non-empty
                                       | sections).
                                       |
Audiomack                              | Audiomack link existence (optional).
Suno: s/SongLink12345678               | Suno link URL part (optional).
                                       |
====                                   | End-of-audio marker (only required if
                                       | there are subsequent non-empty
                                       | sections).
                                       |
{Postscript 1}                         | Postscript note label (optional).
Something to note.                     | Postscript note content (mandatory for
                                       | each note).
                                       |
----                                   | Divider between postscript notes (only
                                       | required if there is another note).
                                       |
This is another postscript note,       | There may be any number of postscript
but without a label.                   | notes.  Single newlines within
                                       | postscript notes are not preserved.
This note has two paragraphs.          | Paragraph breaks are indicated by blank
                                       | lines.
                                       |
----                                   |
<<<                                    | A literal block.  Lines between <<< and
  - $ref: "_shared.yaml#/disclaimer"   | >>> are not converted.
>>>                                    |
====                                   | End-of-postscript marker (only
                                       | required if there are subsequent
                                       | non-empty sections).
                                       |
{Synopsis}                             | This marks the start of the analysis
                                       | synopsis.  The analysis synopsis is
This is where the synopsis of the      | optional.  Newlines are not preserved
analysis goes.                         | within these paragraphs.  New
                                       | paragraphs are indicated by blank
Another paragraph.                     | lines.
                                       |
# Section Heading                      | This will be converted to:
                                       | <h3>Section Heading</h3>
Some more text can go here.            |
                                       |
Here is _another_ paragraph.           | The word "another" is emphasised (see
                                       | notes below).
                                       |
{Full}                                 | This marks the start of the full
                                       | analysis.  This is optional, unless a
This is where the full analysis goes.  | synopsis section is present, in which
                                       | case it is mandatory.
# Section Heading                      |
                                       |
## Sub-Section Heading                 | This will be converted to an <h4> heading.
                                       |
### Sub-Sub-Section Heading            | This will be converted to an <h5> heading.
                                       |
A paragraph in the sub-sub-section of  |
the full analysis.                     |
                                       |
====                                   | End-of-file marker.  This is optional,
                                       | but if it is present, any subsequent
*This section will be ignored.*  It    | content will be ignored.
can be used for comments.              |

## Dividers

There may be any number (including zero) of blank lines before and after
dividers ("----" and "===="), labels ("{{...}}" and "{...}") and literal block
delimiters ("<<<" and ">>>"), with no effect on the output.

## Markup

Poem files support this limited set of conversion instructions:

 Raw         | Converted
-------------|--------------------------------------------------------
 \_          | _
 \*          | *
 \~          | ~
 \[          | [
 \`          | `
 \"          | "
 \&          | &
 \'          | '
 \-          | -
 \<          | <
 \>          | >
 \=          | =
 \$          | $
 \\          | \
 _text_      | <em>text</em>
 *text*      | <strong>text</strong>
 ~text~      | <s>text</s>
 [text|url]  | <a href="https://url">text</a>
 `text`      | &#8216;text&#8217;
 "text"      | &#8220;text&#8221;
 <<.c:text>> | <span class="c">text</span>
 &           | &#38;
 '           | &#39;
 --          | &#8211;
 ---         | &#8212;
 <<<         | The start of a literal block.
 >>>         | The end of a literal block.
 <<#         | The start of a comment block.
 #>>         | The end of a comment block.
 ={token}=   | The definition of a single-line variable named "token".
 ={token}<<= | The start of a multi-line variable definition.
 =>>         | The end of a multi-line variable definition.
 ${token}    | Insert the value of the "token" variable.

These instructions may be nested.  E.g.,
  `This [*is a _test_* link|example.com].`
will be converted to:
  &#8216;This <a href="https://example.com"><strong>is a <em>test</em></strong>
  link</a>.&#8217;

### Quoting and Bracketing Pairs

The special quoting/bracketing character pairs are:

 Left   | Right | Note
--------|-------|-----------------------------------------------------
  _     |  _    | Italic
  *     |  *    | Bold
  ~     |  ~    | Strikethrough
  [     |  ]    | Link
  `     |  `    | Single quotes
  "     |  "    | Double quotes
  <<.c: |  >>   | "c" is a placeholder matching /^\w(?:[\w\.-]*|\w)?$/


These pairs will match across lines within a paragraph, but not across
paragraphs.  Unmatched pairs are not converted.

## Escaping

A backslash before a special character (or character string) will prevent a
conversion.  E.g.,
  A demonstration---an example---of an em-dash.
will be converted to:
  A demonstration&#8212;an example&#8212;of an em-dash.
But
  A demonstration of preventing em-dash (\-\--) conversion.
will be converted to:
  A demonstration of preventing em-dash (---) conversion.
However, be aware that
  \---
will be converted to:
  -&ndash;

## Comment Blocks

Comment blocks start with `<<#` (anchored to the start of the line) and end with
`#>>` (anchored to the start of the line).  Lines between these markers (and the
marker lines themselves) will not be included in the output file. Text after a
comment marker (on the same line as the marker) will also be ignored.

## Variables

Variable definitions must be anchored to the start of a line.

### Single-Line Variables

Single-line variable definitions must match this (Perl-flavoured) regular
expression:
  /^=\{ ( [A-Za-z0-9] (?: [^{}$<>]* [^{}$<> ] )? ) \}= ( .* )/xs
where the first capture group is the variable name and the second capture group
is its value.

#### Example

Raw (input):
```
={My token!}= (some text)
Here is${My token!}.
```

Converted (output):
```
Here is (some text).
```

### Multi-Line Variables

Multi-line variable definitions must match this (Perl-flavoured) regular
expression:
  /^=\{ ( [A-Za-z0-9] (?: [^{}$<>]* [^{}$<> ] )? ) \}<<= .*? ^( .* ) \n=>> .*/xsm
where the first capture group is the variable name and the second capture group
is its value.  The final newline is not included in the variable's value.

#### Example

Raw (input):
```
={My token!}<<= Anything after the second "=" on this line is ignored.
 (some text)
=>> Anything after the second ">" on this line is ignored.
Here is${My token!}.
```

Converted (output):
```
Here is (some text).
```

### Rules for Variables

1.  Variables can be defined anywhere in the file, except inside literal blocks
    or multi-line variable blocks.

2.  Variables are file-scoped.

3.  If a variable is used before it is defined, no substitution occurs.  I.e.,
    `${undefined}` will remain as literal text in the output.  When this occurs,
    parsers should emit a warning, but they should not raise an exception.

4.  Variables may be redefined.  The old value will be clobbered.

5.  Variable definition lines do not appear in the output.  They do not count as
    content lines in their containing section.

6.  Variables may be nested: A variable definition may include a `${...}`
    reference.  The inner variable reference will be substituted when the outer
    variable is defined (not when the outer variable is used).  Nesting may be
    of any depth, so, e.g., if `={a}=foo`, and later `={b}=${a}bar`, and later
    `={c}=${b}baz`, then `${c}` will be expanded to `foobarbaz`.  Also, if
    `={a}=foo`, and later `={a}=${a}bar`, then `${a}` will be expanded to
    `foobar`.

7.  Variables are processed for markup after substitution.

8.  Variables cannot be used inside literal blocks.

9.  Whitespace is retained:
    - For single-line variables, everything after the second "=" is included in
      the variable's value.
    - For multi-line variables, everything after the newline character of the
      start tag line up to just before the final newline character before the
      close tag line is included.

10. Variables may be used inside labels (both `{{...}}` and `{...}` labels).

## Comments

1.  Comment tags within literal blocks do not start a comment.  These will be
    retained unchanged.

2.  Comments are removed before any other processing occurs.

