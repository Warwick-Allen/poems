name: Build and Deploy Poems

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build poems
        run: npm run build

      - name: Check for build artifacts
        run: |
          echo "Checking for generated files..."
          echo "Current directory contents:"
          ls -la
          echo "Public directory contents:"
          ls -la public/
          echo "File sizes:"
          ls -lh public/index.html public/all-poems.html public/styles.css 2>/dev/null || echo "Files not found"
          if [ ! -f "public/index.html" ]; then
            echo "❌ public/index.html was not generated"
            exit 1
          fi
          if [ ! -f "public/all-poems.html" ]; then
            echo "❌ public/all-poems.html was not generated"
            exit 1
          fi
          if [ ! -f "public/styles.css" ]; then
            echo "❌ public/styles.css was not found"
            exit 1
          fi
          echo "✅ All build artifacts generated successfully"
          echo "File contents preview:"
          head -5 public/index.html
          echo "..."
          head -5 public/all-poems.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment structure
        run: |
          # Create a deployment directory structure
          mkdir -p deployment/public
          # Copy all public files to the deployment/public directory
          cp -r public/* deployment/public/
          # Also copy the files to the root for direct access
          cp public/index.html deployment/
          cp public/all-poems.html deployment/
          echo "Deployment structure created:"
          ls -la deployment/
          ls -la deployment/public/

      - name: Upload artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./deployment"

      - name: Verify artifact upload
        run: |
          echo "✅ Artifact uploaded successfully"
          echo "Deployment structure verification:"
          echo "Root files:"
          ls -la deployment/
          echo "Public directory files:"
          ls -la deployment/public/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
